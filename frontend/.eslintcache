[{"F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\index.js":"1","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\reportWebVitals.js":"2","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\Home.js":"3","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\Create_Poll.js":"4","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\Getpoll.js":"5","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\components\\Barchart\\Barchart.js":"6","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\api\\index.js":"7","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\AboutUs.js":"8"},{"size":1958,"mtime":1671461335531,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1671432928809,"results":"11","hashOfConfig":"10"},{"size":2250,"mtime":1671461045408,"results":"12","hashOfConfig":"10"},{"size":7371,"mtime":1671561797523,"results":"13","hashOfConfig":"10"},{"size":4829,"mtime":1671563164221,"results":"14","hashOfConfig":"10"},{"size":855,"mtime":1671563220428,"results":"15","hashOfConfig":"10"},{"size":404,"mtime":1671459152083,"results":"16","hashOfConfig":"10"},{"size":1323,"mtime":1671561559848,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1g6pb34",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\index.js",["38"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Create_Poll from './pages/Create_Poll';\r\nimport Getpoll from './pages/Getpoll';\r\nimport AboutUs from './pages/AboutUs';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <div className=\"w-full h-screen\">\r\n        <div className=\"h-16 w-full bg-gray-800 flex items-center\">\r\n          <div className=\"container mx-auto px-5\">\r\n            <Link\r\n              to=\"/\"\r\n              className=\"text-white cursor-pointer hover:text-gray-400 transition duration-150 mr-10\"\r\n            >\r\n              Home\r\n            </Link>\r\n            <Link\r\n              to=\"/about\"\r\n              className=\"text-white cursor-pointer hover:text-gray-400 transition duration-150 mr-10\"\r\n            >\r\n              About Us\r\n            </Link>\r\n            <Link\r\n              to=\"/create\"\r\n              className=\"text-white cursor-pointer hover:text-gray-400 transition duration-150 mr-10\"\r\n            >\r\n              Create Poll\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path=\"/create\">\r\n            <Create_Poll />\r\n          </Route>\r\n          <Route\r\n            path=\"/polls/:poll\"\r\n            render={(props) => <Getpoll props={props} />}\r\n          />\r\n          <Route path=\"/about\">\r\n            <AboutUs />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["39","40"],"F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\reportWebVitals.js",[],"F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\Home.js",["41"],"import React from 'react';\r\nimport styles from './style.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport svg1 from './../assets/home.svg';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className={styles.main_container}>\r\n      <div className={styles.leftDiv}>\r\n        <div className={styles.container}>\r\n          <div>\r\n            <h2 className={styles.main_heading}>\r\n              Welcome To{' '}\r\n              <span style={{ fontSize: '60px' }}>\r\n                <ReactTypingEffect\r\n                  typingDelay=\"100\"\r\n                  cursor=\"_\"\r\n                  speed=\"300\"\r\n                  eraseSpeed=\"250\"\r\n                  eraseDelay=\"3000\"\r\n                  text={['Vote:It']}\r\n                  cursorRenderer={(cursor) => <h1>{cursor}</h1>}\r\n                  displayTextRenderer={(text, i) => {\r\n                    return (\r\n                      <h1>\r\n                        {text.split(':')[0]} <span>{text.split(':')[1]}</span>\r\n                      </h1>\r\n                    );\r\n                  }}\r\n                />\r\n              </span>\r\n            </h2>\r\n          </div>\r\n          <div>\r\n            <p className={styles.p_}>\r\n              A smart tool to create various types of polls and quizes and\r\n              easily generate a small link to share it with participants. Admin\r\n              dashboards supports realtime interective charts for better\r\n              understanding of participants.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"container mx-auto px-5 my-6\">\r\n          <Link\r\n            to=\"/create\"\r\n            className=\"text-white cursor-pointer hover:text-gray-400 transition duration-150 mr-10\"\r\n          >\r\n            <button class=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\r\n              Create Poll\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className={styles.rightDiv}>\r\n        <div style={{ width: '80%' }}>\r\n          <img src={svg1} style={{ width: '100%', height: '100%' }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\Create_Poll.js",["42","43","44","45","46"],"import React, { useState } from 'react';\r\nimport { NewPoll } from '../api';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  LinkedinShareButton,\r\n  RedditIcon,\r\n  RedditShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  WhatsappIcon,\r\n  WhatsappShareButton,\r\n  LinkedinIcon,\r\n} from 'react-share';\r\n\r\nimport { ShareButtons, ShareCounts, generateShareIcon } from 'react-share';\r\n\r\n// const url = 'https://vote-me.netlify.app';\r\n\r\nconst url = 'http://localhost:3000';\r\n\r\nfunction Create_Poll() {\r\n  const [title, setTitle] = useState('');\r\n  const [choices, setChoices] = useState(['']);\r\n  const [error, seterrror] = useState(false);\r\n  const [success, setsuccess] = useState({});\r\n  const [loading, setloading] = useState(false);\r\n  const addAnswer = () => {\r\n    setChoices([...choices, '']);\r\n  };\r\n\r\n  const removeChoice = (index) => {\r\n    const newChoices = choices.filter((choice, choiceIndex) => {\r\n      return choiceIndex !== index;\r\n    });\r\n\r\n    setChoices(newChoices);\r\n  };\r\n\r\n  const onChoiceChange = (index, value) => {\r\n    const newChoices = choices.map((choice, choiceIndex) => {\r\n      if (choiceIndex === index) {\r\n        return value;\r\n      }\r\n\r\n      return choice;\r\n    });\r\n\r\n    setChoices(newChoices);\r\n  };\r\n\r\n  const createPoll = async () => {\r\n    setloading(true);\r\n    const newpoll = {\r\n      title,\r\n      choices,\r\n    };\r\n    try {\r\n      const newpoll_created = await NewPoll(newpoll);\r\n      setTitle('');\r\n      setChoices(['']);\r\n      await setsuccess(newpoll_created.data);\r\n      seterrror(false);\r\n    } catch (error) {\r\n      seterrror(true);\r\n      console.log(error.message);\r\n    }\r\n    setloading(false);\r\n  };\r\n\r\n  const copyToClipboar = () => {\r\n    navigator.clipboard.writeText(`${url}/polls/${success._id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto my-16 md:my-32 px-6 items-center\">\r\n      {loading ? (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            marginTop: '4rem',\r\n          }}\r\n        >\r\n          <CircularProgress\r\n            style={{ textAlign: 'center', display: 'inline-block' }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"w-full max-w-3xl mx-auto rounded shadow-xl bg-white\">\r\n          {error ? (\r\n            <header\r\n              className=\"px-8 py-5 text-gray-800\"\r\n              style={{ backgroundColor: '#f05454', color: 'white' }}\r\n            >\r\n              *All fields are required and minimum two choices are required\r\n            </header>\r\n          ) : null}\r\n          <header className=\"border-b border-gray-400 px-8 py-5 text-white-800\">\r\n            <strong>Create poll</strong>\r\n          </header>\r\n\r\n          {success._id ? (\r\n            <div className=\"py-9 px-8\">\r\n              <div className=\"w-full mb-2 bg-green-100 text-green-500 border border-green-500 rounded py-3 px-2\">\r\n                <strong>Poll created successfully - </strong>\r\n                <Link to={`/polls/${success._id}`}>\r\n                  {url}/polls/{success._id}\r\n                </Link>\r\n                <div style={{ display: 'inline-block', float: 'right' }}>\r\n                  <FileCopyIcon onClick={copyToClipboar} />\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: '100%',\r\n                  height: '20px',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <EmailShareButton\r\n                  style={{ marginLeft: '1rem', marginRight: '1rem' }}\r\n                  url={`${url}/polls/${success._id}`}\r\n                >\r\n                  <EmailIcon size={45} round />\r\n                </EmailShareButton>\r\n                <WhatsappShareButton\r\n                  style={{ marginLeft: '1rem', marginRight: '1rem' }}\r\n                  url={`${url}/polls/${success._id}`}\r\n                >\r\n                  <WhatsappIcon size={45} round />\r\n                </WhatsappShareButton>\r\n                <TwitterShareButton\r\n                  style={{ marginLeft: '1rem', marginRight: '1rem' }}\r\n                  url={`${url}/polls/${success._id}`}\r\n                >\r\n                  <TwitterIcon size={45} round />{' '}\r\n                </TwitterShareButton>\r\n                <RedditShareButton\r\n                  style={{ marginLeft: '1rem', marginRight: '1rem' }}\r\n                  url={`${url}/polls/${success._id}`}\r\n                >\r\n                  <RedditIcon size={45} round />\r\n                </RedditShareButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          {!success._id ? (\r\n            <div className=\"py-5 px-8\">\r\n              <div className=\"mb-6\">\r\n                <label htmlFor=\"title\" className=\"text-sm mb-2 inline-block\">\r\n                  Enter the title of the poll\r\n                </label>\r\n                <input\r\n                  onChange={(event) => setTitle(event.target.value)}\r\n                  value={title}\r\n                  name=\"title\"\r\n                  id=\"title\"\r\n                  type=\"text\"\r\n                  className=\"w-full py-2 border border-gray-400 rounded px-4\"\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"text-sm mb-2 inline-block\">\r\n                  Enter all the possible answers for this poll\r\n                </label>\r\n                {choices.map((choice, index) => (\r\n                  <div key={index} className=\"w-full flex items-center mb-2\">\r\n                    <input\r\n                      onChange={(event) =>\r\n                        onChoiceChange(index, event.target.value)\r\n                      }\r\n                      key={index}\r\n                      type=\"text\"\r\n                      value={choice}\r\n                      className=\"w-full py-2 border border-gray-400 rounded px-4\"\r\n                    />\r\n                    <button\r\n                      onClick={() => removeChoice(index)}\r\n                      class=\"bg-red-500 hover:bg-red-400 text-white font-bold py-2 px-4 border-b-4 border-red-700 hover:border-red-500 rounded\"\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button\r\n                onClick={addAnswer}\r\n                class=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\r\n              >\r\n                Add Option\r\n              </button>\r\n              <div className=\"mt-12 mb-6 text-center\">\r\n                <button\r\n                  onClick={createPoll}\r\n                  class=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\r\n                >\r\n                  Create Poll\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Create_Poll;\r\n","F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\Getpoll.js",["47","48"],"F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\components\\Barchart\\Barchart.js",["49","50","51","52","53","54"],"F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\api\\index.js",[],"F:\\MAJOR PROJECT\\VoteMe-webapp\\frontend\\src\\pages\\AboutUs.js",["55","56"],{"ruleId":"57","severity":1,"message":"58","line":39,"column":13,"nodeType":"59","endLine":39,"endColumn":28},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":57,"column":11,"nodeType":"59","endLine":57,"endColumn":71},{"ruleId":"66","severity":1,"message":"67","line":9,"column":3,"nodeType":"68","messageId":"69","endLine":9,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":16,"column":3,"nodeType":"68","messageId":"69","endLine":16,"endColumn":15},{"ruleId":"66","severity":1,"message":"71","line":19,"column":10,"nodeType":"68","messageId":"69","endLine":19,"endColumn":22},{"ruleId":"66","severity":1,"message":"72","line":19,"column":24,"nodeType":"68","messageId":"69","endLine":19,"endColumn":35},{"ruleId":"66","severity":1,"message":"73","line":19,"column":37,"nodeType":"68","messageId":"69","endLine":19,"endColumn":54},{"ruleId":"74","severity":1,"message":"75","line":86,"column":6,"nodeType":"76","endLine":86,"endColumn":8,"suggestions":"77"},{"ruleId":"66","severity":1,"message":"78","line":105,"column":11,"nodeType":"68","messageId":"69","endLine":105,"endColumn":23},{"ruleId":"66","severity":1,"message":"79","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"80","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":17},{"ruleId":"66","severity":1,"message":"81","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":24},{"ruleId":"66","severity":1,"message":"82","line":9,"column":8,"nodeType":"68","messageId":"69","endLine":9,"endColumn":14},{"ruleId":"66","severity":1,"message":"83","line":13,"column":10,"nodeType":"68","messageId":"69","endLine":13,"endColumn":17},{"ruleId":"66","severity":1,"message":"84","line":13,"column":19,"nodeType":"68","messageId":"69","endLine":13,"endColumn":29},{"ruleId":"66","severity":1,"message":"85","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":34,"column":11,"nodeType":"59","endLine":34,"endColumn":70},"react/jsx-pascal-case","Imported JSX component Create_Poll must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'LinkedinShareButton' is defined but never used.","Identifier","unusedVar","'LinkedinIcon' is defined but never used.","'ShareButtons' is defined but never used.","'ShareCounts' is defined but never used.","'generateShareIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newFetch'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'poll_updated' is assigned a value but never used.","'useEffect' is defined but never used.","'GetPoll' is defined but never used.","'CircularProgress' is defined but never used.","'Pusher' is defined but never used.","'loading' is assigned a value but never used.","'setloading' is assigned a value but never used.","'githubIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [newFetch]",{"range":"91","text":"92"},[2280,2282],"[newFetch]"]